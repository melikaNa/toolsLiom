/* eslint-disable */
/* tslint:disable */
// @ts-nocheck
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: 3zKPdhWckw1SJpPYhK46Bs
// Component: J9XPQI20UUaf

import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";
import { useRouter } from "next/router";

import {
  Flex as Flex__,
  MultiChoiceArg,
  PlasmicDataSourceContextProvider as PlasmicDataSourceContextProvider__,
  PlasmicIcon as PlasmicIcon__,
  PlasmicImg as PlasmicImg__,
  PlasmicLink as PlasmicLink__,
  PlasmicPageGuard as PlasmicPageGuard__,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  Stack as Stack__,
  StrictProps,
  Trans as Trans__,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  generateOnMutateForSpec,
  generateStateOnChangeProp,
  generateStateOnChangePropForCodeComponents,
  generateStateValueProp,
  get as $stateGet,
  hasVariant,
  initializeCodeComponentStates,
  initializePlasmicStates,
  makeFragment,
  omit,
  pick,
  renderPlasmicSlot,
  set as $stateSet,
  useCurrentUser,
  useDollarState,
  usePlasmicTranslator,
  useTrigger,
  wrapWithClassName
} from "@plasmicapp/react-web";
import {
  DataCtxReader as DataCtxReader__,
  useDataEnv,
  useGlobalActions
} from "@plasmicapp/react-web/lib/host";
import * as plasmicAuth from "@plasmicapp/react-web/lib/auth";

import { usePlasmicDataSourceContext } from "@plasmicapp/data-sources-context";

import { Input } from "@/fragment/components/input"; // plasmic-import: 31QElsfd4yPt/codeComponent
import Star from "../../Star"; // plasmic-import: UghJ0YX6Mja0/component
import { Timer } from "@plasmicpkgs/plasmic-basic-components";
import ButtonLiom from "../../ButtonLiom"; // plasmic-import: HjsnDydNfnF-/component
import Button from "../../Button"; // plasmic-import: gyGUSWpb8joh/component
import { _useGlobalVariants } from "./plasmic"; // plasmic-import: 3zKPdhWckw1SJpPYhK46Bs/projectModule
import { _useStyleTokens } from "./PlasmicStyleTokensProvider"; // plasmic-import: 3zKPdhWckw1SJpPYhK46Bs/styleTokensProvider
import { _useStyleTokens as useStyleTokens_antd_5_hostless } from ""; // plasmic-import: ohDidvG9XsCeFumugENU3J/styleTokensProvider
import { _useStyleTokens as useStyleTokens_plasmic_rich_components } from ""; // plasmic-import: jkU633o1Cz7HrJdwdxhVHk/styleTokensProvider
import { _useStyleTokens as useStyleTokens_paziresh_24_design_system } from ""; // plasmic-import: 6HBcNwr8dz9LuS1Qe36xa5/styleTokensProvider
import { _useStyleTokens as useStyleTokens_hamdast_sdk } from ""; // plasmic-import: 9yPKYrtYPnCNEj6BTTfHnY/styleTokensProvider

import "@plasmicapp/react-web/lib/plasmic.css";

import projectcss from "./plasmic.module.css"; // plasmic-import: 3zKPdhWckw1SJpPYhK46Bs/projectcss
import sty from "./PlasmicClinic.module.css"; // plasmic-import: J9XPQI20UUaf/css

import Icon74Icon from "./icons/PlasmicIcon__Icon74"; // plasmic-import: cyp8SzS0Ew6e/icon
import Icon75Icon from "./icons/PlasmicIcon__Icon75"; // plasmic-import: jQwCh8_chjXs/icon
import MindSvgIcon from "./icons/PlasmicIcon__MindSvg"; // plasmic-import: EjL1rsyKDNC1/icon
import DermisSvgIcon from "./icons/PlasmicIcon__DermisSvg"; // plasmic-import: yhx1l7GVLXeu/icon
import DietFoodSvgIcon from "./icons/PlasmicIcon__DietFoodSvg"; // plasmic-import: bEJ7T5Yqymbv/icon
import Icon22Icon from "./icons/PlasmicIcon__Icon22"; // plasmic-import: CIGrIuwcL9LP/icon
import Icon76Icon from "./icons/PlasmicIcon__Icon76"; // plasmic-import: QxPMOAUC8mlo/icon
import Icon2Icon from "./icons/PlasmicIcon__Icon2"; // plasmic-import: 8W-HC9J9wkFf/icon
import Icon86Icon from "./icons/PlasmicIcon__Icon86"; // plasmic-import: VMo-lal1h2wR/icon
import Icon80Icon from "./icons/PlasmicIcon__Icon80"; // plasmic-import: UI5yLhQsbEP-/icon
import Icon85Icon from "./icons/PlasmicIcon__Icon85"; // plasmic-import: W4jO2t5XWjTk/icon
import CheckSvgIcon from "./icons/PlasmicIcon__CheckSvg"; // plasmic-import: C9T5fGoOgKRV/icon
import Icon11Icon from "./icons/PlasmicIcon__Icon11"; // plasmic-import: K1zqSSDSpUrs/icon
import CircleIcon from "./icons/PlasmicIcon__Circle"; // plasmic-import: DJm3EFMA22X0/icon
import ChevronDown2Icon from "./icons/PlasmicIcon__ChevronDown2"; // plasmic-import: BOcy3o8Lah4p/icon

createPlasmicElementProxy;

export type PlasmicClinic__VariantMembers = {
  _1: "docters" | "docter" | "chatviow";
};
export type PlasmicClinic__VariantsArgs = {
  _1?: SingleChoiceArg<"docters" | "docter" | "chatviow">;
};
type VariantPropType = keyof PlasmicClinic__VariantsArgs;
export const PlasmicClinic__VariantProps = new Array<VariantPropType>("_1");

export type PlasmicClinic__ArgsType = {};
type ArgPropType = keyof PlasmicClinic__ArgsType;
export const PlasmicClinic__ArgProps = new Array<ArgPropType>();

export type PlasmicClinic__OverridesType = {
  root?: Flex__<"div">;
  bg?: Flex__<"div">;
  rectangle2?: Flex__<"div">;
  ุง?: Flex__<"div">;
  ุง2?: Flex__<"div">;
  rectangle?: Flex__<"div">;
  findSuitableSpecia?: Flex__<"div">;
  rectangle3?: Flex__<"div">;
  speciality?: Flex__<"div">;
  card6?: Flex__<"div">;
  card4?: Flex__<"div">;
  card8?: Flex__<"div">;
  card5?: Flex__<"div">;
  speciality2?: Flex__<"div">;
  card9?: Flex__<"div">;
  card10?: Flex__<"div">;
  card11?: Flex__<"div">;
  speciality3?: Flex__<"div">;
  card12?: Flex__<"div">;
  card13?: Flex__<"div">;
  card14?: Flex__<"div">;
  input?: Flex__<typeof Input>;
  mensah?: Flex__<"div">;
  input2?: Flex__<typeof Input>;
  mensah2?: Flex__<"div">;
  doctorsDetails?: Flex__<"div">;
  bg2?: Flex__<"div">;
  patients?: Flex__<"div">;
  group?: Flex__<"div">;
  rectangle14?: Flex__<"div">;
  patients2?: Flex__<"div">;
  group2?: Flex__<"div">;
  rectangle15?: Flex__<"div">;
  patients3?: Flex__<"div">;
  group3?: Flex__<"div">;
  rectangle16?: Flex__<"div">;
  about?: Flex__<"div">;
  drBellamyNicholas?: Flex__<"div">;
  workingTime?: Flex__<"div">;
  monSat0830Am?: Flex__<"div">;
  timer?: Flex__<typeof Timer>;
  buttonLiom?: Flex__<typeof ButtonLiom>;
  buttonLiom2?: Flex__<typeof ButtonLiom>;
  button?: Flex__<typeof Button>;
};

export interface DefaultClinicProps {}

const $$ = {};

function useNextRouter() {
  try {
    return useRouter();
  } catch {}
  return undefined;
}

function PlasmicClinic__RenderFunc(props: {
  variants: PlasmicClinic__VariantsArgs;
  args: PlasmicClinic__ArgsType;
  overrides: PlasmicClinic__OverridesType;
  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;

  const args = React.useMemo(
    () =>
      Object.assign(
        {},
        Object.fromEntries(
          Object.entries(props.args).filter(([_, v]) => v !== undefined)
        )
      ),
    [props.args]
  );

  const $props = {
    ...args,
    ...variants
  };

  const __nextRouter = useNextRouter();

  const $ctx = useDataEnv?.() || {};
  const refsRef = React.useRef({});
  const $refs = refsRef.current;

  const currentUser = useCurrentUser?.() || {};

  const stateSpecs: Parameters<typeof useDollarState>[0] = React.useMemo(
    () => [
      {
        path: "_1",
        type: "private",
        variableType: "variant",
        initFunc: ({ $props, $state, $queries, $ctx }) => $props._1
      },
      {
        path: "input.value",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => ""
      },
      {
        path: "input2.value",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => ""
      },
      {
        path: "id",
        type: "private",
        variableType: "number",
        initFunc: ({ $props, $state, $queries, $ctx }) => 0
      },
      {
        path: "variable",
        type: "private",
        variableType: "number",
        initFunc: ({ $props, $state, $queries, $ctx }) => 0
      },
      {
        path: "buttonLiom.color",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined
      },
      {
        path: "buttonLiom.load",
        type: "private",
        variableType: "boolean",
        initFunc: ({ $props, $state, $queries, $ctx }) => false
      },
      {
        path: "buttonLiom2.color",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined
      },
      {
        path: "buttonLiom2.load",
        type: "private",
        variableType: "boolean",
        initFunc: ({ $props, $state, $queries, $ctx }) => false
      }
    ],
    [$props, $ctx, $refs]
  );
  const $state = useDollarState(stateSpecs, {
    $props,
    $ctx,
    $queries: {},
    $refs
  });

  const globalVariants = _useGlobalVariants();
  const styleTokensClassNames = _useStyleTokens();
  const styleTokensClassNames_antd_5_hostless =
    useStyleTokens_antd_5_hostless();
  const styleTokensClassNames_plasmic_rich_components =
    useStyleTokens_plasmic_rich_components();
  const styleTokensClassNames_paziresh_24_design_system =
    useStyleTokens_paziresh_24_design_system();
  const styleTokensClassNames_hamdast_sdk = useStyleTokens_hamdast_sdk();

  return (
    <React.Fragment>
      <Head></Head>

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            styleTokensClassNames,
            styleTokensClassNames_antd_5_hostless,
            styleTokensClassNames_plasmic_rich_components,
            styleTokensClassNames_paziresh_24_design_system,
            styleTokensClassNames_hamdast_sdk,
            sty.root,
            {
              [sty.root_1_chatviow]: hasVariant($state, "_1", "chatviow"),
              [sty.root_1_docter]: hasVariant($state, "_1", "docter"),
              [sty.root_1_docters]: hasVariant($state, "_1", "docters")
            }
          )}
        >
          <div
            className={classNames(projectcss.all, sty.freeBox__uJakj, {
              [sty.freeBox_1_chatviow__uJakjlEmdG]: hasVariant(
                $state,
                "_1",
                "chatviow"
              ),
              [sty.freeBox_1_docter__uJakjiDhcT]: hasVariant(
                $state,
                "_1",
                "docter"
              ),
              [sty.freeBox_1_docters__uJakjRd8YN]: hasVariant(
                $state,
                "_1",
                "docters"
              )
            })}
          >
            <div
              data-plasmic-name={"bg"}
              data-plasmic-override={overrides.bg}
              className={classNames(projectcss.all, sty.bg)}
            >
              <div
                data-plasmic-name={"rectangle2"}
                data-plasmic-override={overrides.rectangle2}
                className={classNames(projectcss.all, sty.rectangle2, {
                  [sty.rectangle2_1_docter]: hasVariant($state, "_1", "docter")
                })}
              >
                <div className={classNames(projectcss.all, sty.freeBox__jySlz)}>
                  <div
                    data-plasmic-name={"\u0627"}
                    data-plasmic-override={overrides.ุง}
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.ุง
                    )}
                  >
                    {
                      "\u0647\u0631 \u06a9\u062c\u0627 \u06a9\u0647 \u0647\u0633\u062a\u06cc \u0648 \u0647\u0631 \u0632\u0645\u0627\u0646\u06cc \u06a9\u0647 \u0646\u06cc\u0627\u0632 \u062f\u0627\u0631\u06cc\u060c \u0628\u0647 \u0631\u0627\u062d\u062a\u06cc \u0628\u0647 \u067e\u0632\u0634\u06a9 \u062f\u0633\u062a\u0631\u0633\u06cc \u062f\u0627\u0634\u062a\u0647 \u0628\u0627\u0634."
                    }
                  </div>
                  <div
                    data-plasmic-name={"\u06272"}
                    data-plasmic-override={overrides.ุง2}
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.ุง2
                    )}
                    onClick={async event => {
                      const $steps = {};

                      $steps["update1"] = true
                        ? (() => {
                            const actionArgs = {
                              vgroup: "_1",
                              operation: 0,
                              value: "docters"
                            };
                            return (({ vgroup, value }) => {
                              if (typeof value === "string") {
                                value = [value];
                              }

                              $stateSet($state, vgroup, value);
                              return value;
                            })?.apply(null, [actionArgs]);
                          })()
                        : undefined;
                      if (
                        $steps["update1"] != null &&
                        typeof $steps["update1"] === "object" &&
                        typeof $steps["update1"].then === "function"
                      ) {
                        $steps["update1"] = await $steps["update1"];
                      }
                    }}
                  >
                    {
                      "\u0644\u06cc\u0633\u062a \u06a9\u0627\u0645\u0644 \u067e\u0632\u0634\u06a9\u0627\u0646  >"
                    }
                  </div>
                </div>
                <PlasmicImg__
                  alt={""}
                  className={classNames(sty.img___2SiF8)}
                  displayHeight={"auto"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"200px"}
                  loading={"lazy"}
                  src={{
                    src: "/plasmic/liom_tools/images/ๅป็ๅทฅไฝ็็ทๅป็็ข้ๆๅนณๆ็ป0918ๆๅป็ปๆฟ1.png",
                    fullWidth: 888,
                    fullHeight: 705,
                    aspectRatio: undefined
                  }}
                />
              </div>
            </div>
            <div
              className={classNames(projectcss.all, sty.freeBox__yaSue, {
                [sty.freeBox_1_chatviow__yaSuelEmdG]: hasVariant(
                  $state,
                  "_1",
                  "chatviow"
                ),
                [sty.freeBox_1_docters__yaSueRd8YN]: hasVariant(
                  $state,
                  "_1",
                  "docters"
                )
              })}
            >
              <div
                data-plasmic-name={"rectangle"}
                data-plasmic-override={overrides.rectangle}
                className={classNames(projectcss.all, sty.rectangle)}
                onClick={async event => {
                  const $steps = {};

                  $steps["update1"] = true
                    ? (() => {
                        const actionArgs = {
                          vgroup: "_1",
                          operation: 0,
                          value: "chatviow"
                        };
                        return (({ vgroup, value }) => {
                          if (typeof value === "string") {
                            value = [value];
                          }

                          $stateSet($state, vgroup, value);
                          return value;
                        })?.apply(null, [actionArgs]);
                      })()
                    : undefined;
                  if (
                    $steps["update1"] != null &&
                    typeof $steps["update1"] === "object" &&
                    typeof $steps["update1"].then === "function"
                  ) {
                    $steps["update1"] = await $steps["update1"];
                  }
                }}
              >
                <div className={classNames(projectcss.all, sty.freeBox__o1CxK)}>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__tuHr6
                    )}
                  >
                    {
                      "\u0648\u06cc\u0632\u06cc\u062a\u200c\u0647\u0627\u06cc \u0645\u0646"
                    }
                  </div>
                  <div
                    data-plasmic-name={"findSuitableSpecia"}
                    data-plasmic-override={overrides.findSuitableSpecia}
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.findSuitableSpecia
                    )}
                  >
                    {
                      "\u067e\u06cc\u0627\u0645\u200c\u0647\u0627\u06cc \u0631\u062f \u0648 \u0628\u062f\u0644 \u0634\u062f\u0647 \u0628\u0627 \u067e\u0632\u0634\u06a9\u0627\u0646"
                    }
                  </div>
                </div>
                <div
                  data-plasmic-name={"rectangle3"}
                  data-plasmic-override={overrides.rectangle3}
                  className={classNames(projectcss.all, sty.rectangle3)}
                >
                  <Icon74Icon
                    className={classNames(projectcss.all, sty.svg__dLxvV)}
                    role={"img"}
                  />
                </div>
              </div>
            </div>
            <div
              data-plasmic-name={"speciality"}
              data-plasmic-override={overrides.speciality}
              className={classNames(projectcss.all, sty.speciality, {
                [sty.speciality_1_chatviow]: hasVariant(
                  $state,
                  "_1",
                  "chatviow"
                ),
                [sty.speciality_1_docter]: hasVariant($state, "_1", "docter"),
                [sty.speciality_1_docters]: hasVariant($state, "_1", "docters")
              })}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__v0VnT
                )}
              >
                {
                  "\u062f\u0633\u062a\u0647 \u0628\u0646\u062f\u06cc \u0647\u0627"
                }
              </div>
              <div className={classNames(projectcss.all, sty.freeBox__u9RA4)}>
                <div
                  data-plasmic-name={"card6"}
                  data-plasmic-override={overrides.card6}
                  className={classNames(projectcss.all, sty.card6)}
                >
                  <Icon75Icon
                    className={classNames(projectcss.all, sty.svg__lxyNv)}
                    role={"img"}
                  />

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__p5A5E
                    )}
                  >
                    {"\u0633\u0644\u0627\u0645\u062a \u062c\u0646\u0633\u06cc"}
                  </div>
                </div>
                <div
                  data-plasmic-name={"card4"}
                  data-plasmic-override={overrides.card4}
                  className={classNames(projectcss.all, sty.card4)}
                >
                  <MindSvgIcon
                    className={classNames(projectcss.all, sty.svg__ffwk7)}
                    role={"img"}
                  />

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__a2Im4
                    )}
                  >
                    {"\u0631\u0648\u0646\u0634\u0646\u0627\u0633\u06cc"}
                  </div>
                </div>
                <div
                  data-plasmic-name={"card8"}
                  data-plasmic-override={overrides.card8}
                  className={classNames(projectcss.all, sty.card8)}
                >
                  <DermisSvgIcon
                    className={classNames(projectcss.all, sty.svg___6UTgI)}
                    role={"img"}
                  />

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__ov7Pw
                    )}
                  >
                    {"\u067e\u0648\u0633\u062a \u0648 \u0645\u0648"}
                  </div>
                </div>
                <div
                  data-plasmic-name={"card5"}
                  data-plasmic-override={overrides.card5}
                  className={classNames(projectcss.all, sty.card5)}
                >
                  <DietFoodSvgIcon
                    className={classNames(projectcss.all, sty.svg___8WG5)}
                    role={"img"}
                  />

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___5Vdzy
                    )}
                  >
                    {"\u062a\u063a\u0630\u06cc\u0647"}
                  </div>
                </div>
              </div>
            </div>
            <div
              data-plasmic-name={"speciality2"}
              data-plasmic-override={overrides.speciality2}
              className={classNames(projectcss.all, sty.speciality2, {
                [sty.speciality2_1_chatviow]: hasVariant(
                  $state,
                  "_1",
                  "chatviow"
                ),
                [sty.speciality2_1_docter]: hasVariant($state, "_1", "docter"),
                [sty.speciality2_1_docters]: hasVariant($state, "_1", "docters")
              })}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__qgnY7
                )}
              >
                {
                  "\u0645\u062a\u062e\u0635\u0635\u06cc\u0646  \u0633\u0644\u0627\u0645\u062a \u062c\u0646\u0633\u06cc"
                }
              </div>
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__oRt6U
                )}
              >
                {
                  "\u0645\u0634\u0627\u0648\u0631\u0647 \u062f\u0631 \u0627\u0631\u062a\u0628\u0627\u0637 \u0628\u0627 \u0633\u0644\u0627\u0645\u062a \u062c\u0646\u0633\u06cc \u0648 \u0631\u0648\u0627\u0628\u0637 \u062c\u0646\u0633\u06cc"
                }
              </div>
              <div className={classNames(projectcss.all, sty.freeBox__ziaYt)}>
                <div
                  data-plasmic-name={"card9"}
                  data-plasmic-override={overrides.card9}
                  className={classNames(projectcss.all, sty.card9)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___43Zck
                    )}
                  >
                    {
                      "\u0645\u0634\u0627\u0648\u0631\u0647 \u062f\u0631 \u0627\u0631\u062a\u0628\u0627\u0637 \u0628\u0627 \u0645\u0634\u06a9\u0644\u0627\u062a \u062c\u0646\u0633\u06cc "
                    }
                  </div>
                </div>
                <div
                  data-plasmic-name={"card10"}
                  data-plasmic-override={overrides.card10}
                  className={classNames(projectcss.all, sty.card10)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___1QD0
                    )}
                  >
                    {
                      "\u0645\u0634\u0627\u0648\u0631\u0647 \u062f\u0631\u0645\u0627\u0646 \u0639\u0641\u0648\u0646\u062a \u0647\u0627 "
                    }
                  </div>
                </div>
                <div
                  data-plasmic-name={"card11"}
                  data-plasmic-override={overrides.card11}
                  className={classNames(projectcss.all, sty.card11)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__cBpSi
                    )}
                  >
                    {
                      "\u0645\u0634\u0627\u0648\u0631\u0647 \u0628\u0631\u0627\u06cc \u0628\u0627\u0631\u0648\u0631\u06cc "
                    }
                  </div>
                </div>
              </div>
            </div>
            <div
              data-plasmic-name={"speciality3"}
              data-plasmic-override={overrides.speciality3}
              className={classNames(projectcss.all, sty.speciality3, {
                [sty.speciality3_1_chatviow]: hasVariant(
                  $state,
                  "_1",
                  "chatviow"
                ),
                [sty.speciality3_1_docter]: hasVariant($state, "_1", "docter"),
                [sty.speciality3_1_docters]: hasVariant($state, "_1", "docters")
              })}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__yLw98
                )}
              >
                {
                  "\u0645\u062a\u062e\u0635\u0635\u06cc\u0646  \u067e\u0648\u0633\u062a \u0648 \u0645\u0648"
                }
              </div>
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__a00Q7
                )}
              >
                {
                  "\u0645\u0634\u0627\u0648\u0631\u0647 \u0628\u06cc\u0645\u0627\u0631\u06cc\u200c\u0647\u0627\u06cc \u067e\u0648\u0633\u062a \u0648 \u0645\u0648 "
                }
              </div>
              <div className={classNames(projectcss.all, sty.freeBox__nnod0)}>
                <div
                  data-plasmic-name={"card12"}
                  data-plasmic-override={overrides.card12}
                  className={classNames(projectcss.all, sty.card12)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__lGCj2
                    )}
                  >
                    {
                      "\u0645\u0634\u0627\u0648\u0631\u0647 \u0628\u0631\u0627\u06cc  \u062c\u0648\u0634 \u0635\u0648\u0631\u062a \u0648 \u0644\u06a9\u0647"
                    }
                  </div>
                </div>
                <div
                  data-plasmic-name={"card13"}
                  data-plasmic-override={overrides.card13}
                  className={classNames(projectcss.all, sty.card13)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__e0HmP
                    )}
                  >
                    {
                      "\u0645\u0634\u0627\u0648\u0631\u0647 \u062f\u0631\u0645\u0627\u0646  \u0631\u06cc\u0632\u0634 \u0645\u0648"
                    }
                  </div>
                </div>
                <div
                  data-plasmic-name={"card14"}
                  data-plasmic-override={overrides.card14}
                  className={classNames(projectcss.all, sty.card14)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___00GIm
                    )}
                  >
                    {
                      "\u0645\u0634\u0627\u0648\u0631\u0647 \u06a9\u0627\u0634\u062a \u0645\u0648"
                    }
                  </div>
                </div>
              </div>
            </div>
            <div
              className={classNames(projectcss.all, sty.freeBox__tz8K, {
                [sty.freeBox_1_chatviow__tz8KlEmdG]: hasVariant(
                  $state,
                  "_1",
                  "chatviow"
                ),
                [sty.freeBox_1_docters__tz8KRd8YN]: hasVariant(
                  $state,
                  "_1",
                  "docters"
                )
              })}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__n06Mm
                )}
              >
                {
                  "\u06a9\u0644\u06cc\u0646\u06cc\u06a9 \u0644\u06cc\u0648\u0645"
                }
              </div>
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__tvRzp
                )}
              >
                <React.Fragment>
                  {(() => {
                    try {
                      return undefined;
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return "";
                      }
                      throw e;
                    }
                  })()}
                </React.Fragment>
              </div>
            </div>
          </div>
          <div
            className={classNames(projectcss.all, sty.freeBox__hHlGe, {
              [sty.freeBox_1_chatviow__hHlGelEmdG]: hasVariant(
                $state,
                "_1",
                "chatviow"
              ),
              [sty.freeBox_1_docter__hHlGeiDhcT]: hasVariant(
                $state,
                "_1",
                "docter"
              ),
              [sty.freeBox_1_docters__hHlGeRd8YN]: hasVariant(
                $state,
                "_1",
                "docters"
              )
            })}
          >
            <div
              className={classNames(projectcss.all, sty.freeBox__sd63, {
                [sty.freeBox_1_chatviow__sd63LEmdG]: hasVariant(
                  $state,
                  "_1",
                  "chatviow"
                ),
                [sty.freeBox_1_docters__sd63Rd8YN]: hasVariant(
                  $state,
                  "_1",
                  "docters"
                )
              })}
            >
              <Icon22Icon
                className={classNames(projectcss.all, sty.svg__oOqOf, {
                  [sty.svg_1_chatviow__oOqOFlEmdG]: hasVariant(
                    $state,
                    "_1",
                    "chatviow"
                  ),
                  [sty.svg_1_docters__oOqOfRd8YN]: hasVariant(
                    $state,
                    "_1",
                    "docters"
                  )
                })}
                onClick={async event => {
                  const $steps = {};

                  $steps["update1"] = true
                    ? (() => {
                        const actionArgs = {
                          vgroup: "_1",
                          operation: 1,
                          value: "docters"
                        };
                        return (({ vgroup, value }) => {
                          if (typeof value === "string") {
                            value = [value];
                          }

                          $stateSet($state, vgroup, undefined);
                          return undefined;
                        })?.apply(null, [actionArgs]);
                      })()
                    : undefined;
                  if (
                    $steps["update1"] != null &&
                    typeof $steps["update1"] === "object" &&
                    typeof $steps["update1"].then === "function"
                  ) {
                    $steps["update1"] = await $steps["update1"];
                  }
                }}
                role={"img"}
              />

              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__b4JJm,
                  {
                    [sty.text_1_chatviow__b4JJMlEmdG]: hasVariant(
                      $state,
                      "_1",
                      "chatviow"
                    ),
                    [sty.text_1_docters__b4JJmRd8YN]: hasVariant(
                      $state,
                      "_1",
                      "docters"
                    )
                  }
                )}
              >
                {hasVariant($state, "_1", "chatviow")
                  ? "\u06af\u0641\u062a\u06af\u0648 \u0647\u0627"
                  : "\u067e\u0632\u0634\u06a9\u0627\u0646"}
              </div>
            </div>
            <div
              className={classNames(projectcss.all, sty.freeBox___5Lb9M, {
                [sty.freeBox_1_chatviow___5Lb9MlEmdG]: hasVariant(
                  $state,
                  "_1",
                  "chatviow"
                ),
                [sty.freeBox_1_docters___5Lb9MRd8YN]: hasVariant(
                  $state,
                  "_1",
                  "docters"
                )
              })}
            >
              <Input
                data-plasmic-name={"input"}
                data-plasmic-override={overrides.input}
                className={classNames("__wab_instance", sty.input, {
                  [sty.input_1_chatviow]: hasVariant($state, "_1", "chatviow"),
                  [sty.input_1_docters]: hasVariant($state, "_1", "docters")
                })}
                onChange={async (...eventArgs: any) => {
                  generateStateOnChangeProp($state, ["input", "value"]).apply(
                    null,
                    eventArgs
                  );
                }}
                placeholder={
                  "\u062c\u0633\u062a\u062c\u0648 \u062f\u0631  \u067e\u0632\u0634\u06a9\u0627\u0646"
                }
                type={"text"}
                value={generateStateValueProp($state, ["input", "value"])}
              />

              <Icon76Icon
                className={classNames(projectcss.all, sty.svg___0Osq6, {
                  [sty.svg_1_chatviow___0Osq6LEmdG]: hasVariant(
                    $state,
                    "_1",
                    "chatviow"
                  ),
                  [sty.svg_1_docters___0Osq6Rd8YN]: hasVariant(
                    $state,
                    "_1",
                    "docters"
                  )
                })}
                role={"img"}
              />
            </div>
            <div
              data-plasmic-name={"mensah"}
              data-plasmic-override={overrides.mensah}
              className={classNames(projectcss.all, sty.mensah, {
                [sty.mensah_1_chatviow]: hasVariant($state, "_1", "chatviow"),
                [sty.mensah_1_docter]: hasVariant($state, "_1", "docter"),
                [sty.mensah_1_docters]: hasVariant($state, "_1", "docters")
              })}
            >
              <PlasmicImg__
                alt={""}
                className={classNames(sty.img___1VwbF, {
                  [sty.img_1_chatviow___1VwbFlEmdG]: hasVariant(
                    $state,
                    "_1",
                    "chatviow"
                  ),
                  [sty.img_1_docters___1VwbFRd8YN]: hasVariant(
                    $state,
                    "_1",
                    "docters"
                  )
                })}
                displayHeight={"79px"}
                displayMaxHeight={"none"}
                displayMaxWidth={"100%"}
                displayMinHeight={"0"}
                displayMinWidth={"0"}
                displayWidth={"79px"}
                loading={"lazy"}
                src={{
                  src: "/plasmic/liom_tools/images/imagePlaceholder.svg",
                  fullWidth: 79,
                  fullHeight: 79,
                  aspectRatio: 1
                }}
              />

              <div
                className={classNames(projectcss.all, sty.freeBox__nsrYp, {
                  [sty.freeBox_1_chatviow__nsrYPlEmdG]: hasVariant(
                    $state,
                    "_1",
                    "chatviow"
                  ),
                  [sty.freeBox_1_docters__nsrYpRd8YN]: hasVariant(
                    $state,
                    "_1",
                    "docters"
                  )
                })}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__dzeXu,
                    {
                      [sty.text_1_chatviow__dzeXUlEmdG]: hasVariant(
                        $state,
                        "_1",
                        "chatviow"
                      ),
                      [sty.text_1_docters__dzeXuRd8YN]: hasVariant(
                        $state,
                        "_1",
                        "docters"
                      )
                    }
                  )}
                >
                  {"Dr. Mensah T"}
                </div>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__tmMZp,
                    {
                      [sty.text_1_chatviow__tmMZplEmdG]: hasVariant(
                        $state,
                        "_1",
                        "chatviow"
                      ),
                      [sty.text_1_docters__tmMZpRd8YN]: hasVariant(
                        $state,
                        "_1",
                        "docters"
                      )
                    }
                  )}
                >
                  {"Oncologists"}
                </div>
              </div>
              <div
                className={classNames(projectcss.all, sty.freeBox__knh5G, {
                  [sty.freeBox_1_chatviow__knh5GlEmdG]: hasVariant(
                    $state,
                    "_1",
                    "chatviow"
                  ),
                  [sty.freeBox_1_docters__knh5GRd8YN]: hasVariant(
                    $state,
                    "_1",
                    "docters"
                  )
                })}
              >
                <div
                  className={classNames(projectcss.all, sty.freeBox__ronQ, {
                    [sty.freeBox_1_chatviow__ronQlEmdG]: hasVariant(
                      $state,
                      "_1",
                      "chatviow"
                    ),
                    [sty.freeBox_1_docters__ronQRd8YN]: hasVariant(
                      $state,
                      "_1",
                      "docters"
                    )
                  })}
                >
                  <Star
                    action={true}
                    className={classNames("__wab_instance", sty.star___2Kg0, {
                      [sty.star_1_chatviow___2Kg0LEmdG]: hasVariant(
                        $state,
                        "_1",
                        "chatviow"
                      ),
                      [sty.star_1_docters___2Kg0Rd8YN]: hasVariant(
                        $state,
                        "_1",
                        "docters"
                      )
                    })}
                  />

                  <Star
                    action={true}
                    className={classNames("__wab_instance", sty.star___15Wn, {
                      [sty.star_1_chatviow___15WnlEmdG]: hasVariant(
                        $state,
                        "_1",
                        "chatviow"
                      ),
                      [sty.star_1_docters___15WnRd8YN]: hasVariant(
                        $state,
                        "_1",
                        "docters"
                      )
                    })}
                  />

                  <Star
                    action={true}
                    className={classNames("__wab_instance", sty.star__wcUuv, {
                      [sty.star_1_chatviow__wcUuvlEmdG]: hasVariant(
                        $state,
                        "_1",
                        "chatviow"
                      ),
                      [sty.star_1_docters__wcUuvRd8YN]: hasVariant(
                        $state,
                        "_1",
                        "docters"
                      )
                    })}
                  />

                  <Star
                    action={true}
                    className={classNames("__wab_instance", sty.star__hmYlc, {
                      [sty.star_1_chatviow__hmYlclEmdG]: hasVariant(
                        $state,
                        "_1",
                        "chatviow"
                      ),
                      [sty.star_1_docters__hmYlcRd8YN]: hasVariant(
                        $state,
                        "_1",
                        "docters"
                      )
                    })}
                  />

                  <Star
                    action={true}
                    className={classNames("__wab_instance", sty.star__p3XCy, {
                      [sty.star_1_chatviow__p3XCylEmdG]: hasVariant(
                        $state,
                        "_1",
                        "chatviow"
                      ),
                      [sty.star_1_docters__p3XCyRd8YN]: hasVariant(
                        $state,
                        "_1",
                        "docters"
                      )
                    })}
                  />

                  <Star
                    action={true}
                    className={classNames("__wab_instance", sty.star__xxeoI, {
                      [sty.star_1_chatviow__xxeoIlEmdG]: hasVariant(
                        $state,
                        "_1",
                        "chatviow"
                      ),
                      [sty.star_1_docters__xxeoIRd8YN]: hasVariant(
                        $state,
                        "_1",
                        "docters"
                      )
                    })}
                  />
                </div>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__dkMk,
                    {
                      [sty.text_1_chatviow__dkMklEmdG]: hasVariant(
                        $state,
                        "_1",
                        "chatviow"
                      ),
                      [sty.text_1_docters__dkMkRd8YN]: hasVariant(
                        $state,
                        "_1",
                        "docters"
                      )
                    }
                  )}
                >
                  {
                    "\u062a\u0639\u062f\u0627\u062f \u0645\u0631\u0627\u062c\u0639 (150)"
                  }
                </div>
              </div>
            </div>
          </div>
          {(
            hasVariant($state, "_1", "chatviow")
              ? true
              : hasVariant($state, "_1", "docters")
              ? true
              : false
          ) ? (
            <div
              className={classNames(projectcss.all, sty.freeBox__iriVs, {
                [sty.freeBox_1_chatviow__iriVslEmdG]: hasVariant(
                  $state,
                  "_1",
                  "chatviow"
                ),
                [sty.freeBox_1_docter__iriVsiDhcT]: hasVariant(
                  $state,
                  "_1",
                  "docter"
                ),
                [sty.freeBox_1_docters__iriVsRd8YN]: hasVariant(
                  $state,
                  "_1",
                  "docters"
                )
              })}
            >
              <div
                className={classNames(projectcss.all, sty.freeBox__swKgl, {
                  [sty.freeBox_1_chatviow__swKgllEmdG]: hasVariant(
                    $state,
                    "_1",
                    "chatviow"
                  ),
                  [sty.freeBox_1_docters__swKglRd8YN]: hasVariant(
                    $state,
                    "_1",
                    "docters"
                  )
                })}
              >
                <Icon22Icon
                  className={classNames(projectcss.all, sty.svg__qj8C, {
                    [sty.svg_1_chatviow__qj8ClEmdG]: hasVariant(
                      $state,
                      "_1",
                      "chatviow"
                    ),
                    [sty.svg_1_docters__qj8CRd8YN]: hasVariant(
                      $state,
                      "_1",
                      "docters"
                    )
                  })}
                  onClick={async event => {
                    const $steps = {};

                    $steps["update1"] = true
                      ? (() => {
                          const actionArgs = {
                            vgroup: "_1",
                            operation: 1,
                            value: "docters"
                          };
                          return (({ vgroup, value }) => {
                            if (typeof value === "string") {
                              value = [value];
                            }

                            $stateSet($state, vgroup, undefined);
                            return undefined;
                          })?.apply(null, [actionArgs]);
                        })()
                      : undefined;
                    if (
                      $steps["update1"] != null &&
                      typeof $steps["update1"] === "object" &&
                      typeof $steps["update1"].then === "function"
                    ) {
                      $steps["update1"] = await $steps["update1"];
                    }
                  }}
                  role={"img"}
                />

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text___0V3Oe,
                    {
                      [sty.text_1_chatviow___0V3OElEmdG]: hasVariant(
                        $state,
                        "_1",
                        "chatviow"
                      ),
                      [sty.text_1_docters___0V3OeRd8YN]: hasVariant(
                        $state,
                        "_1",
                        "docters"
                      )
                    }
                  )}
                >
                  {hasVariant($state, "_1", "chatviow")
                    ? "\u06af\u0641\u062a\u06af\u0648 \u0647\u0627"
                    : "\u067e\u0632\u0634\u06a9\u0627\u0646"}
                </div>
                <div
                  className={classNames(projectcss.all, sty.freeBox__ykkS, {
                    [sty.freeBox_1_chatviow__ykkSLEmdG]: hasVariant(
                      $state,
                      "_1",
                      "chatviow"
                    )
                  })}
                >
                  <Icon76Icon
                    className={classNames(projectcss.all, sty.svg__xtX7J, {
                      [sty.svg_1_chatviow__xtX7JlEmdG]: hasVariant(
                        $state,
                        "_1",
                        "chatviow"
                      )
                    })}
                    role={"img"}
                  />
                </div>
              </div>
              <div
                className={classNames(projectcss.all, sty.freeBox__qedM, {
                  [sty.freeBox_1_chatviow__qedMlEmdG]: hasVariant(
                    $state,
                    "_1",
                    "chatviow"
                  ),
                  [sty.freeBox_1_docters__qedMRd8YN]: hasVariant(
                    $state,
                    "_1",
                    "docters"
                  )
                })}
              >
                <Input
                  data-plasmic-name={"input2"}
                  data-plasmic-override={overrides.input2}
                  className={classNames("__wab_instance", sty.input2, {
                    [sty.input2_1_chatviow]: hasVariant(
                      $state,
                      "_1",
                      "chatviow"
                    ),
                    [sty.input2_1_docters]: hasVariant($state, "_1", "docters")
                  })}
                  onChange={async (...eventArgs: any) => {
                    generateStateOnChangeProp($state, [
                      "input2",
                      "value"
                    ]).apply(null, eventArgs);
                  }}
                  placeholder={
                    "\u062c\u0633\u062a\u062c\u0648 \u062f\u0631  \u067e\u0632\u0634\u06a9\u0627\u0646"
                  }
                  type={"text"}
                  value={generateStateValueProp($state, ["input2", "value"])}
                />

                <Icon76Icon
                  className={classNames(projectcss.all, sty.svg__oEqFw, {
                    [sty.svg_1_chatviow__oEqFwlEmdG]: hasVariant(
                      $state,
                      "_1",
                      "chatviow"
                    ),
                    [sty.svg_1_docters__oEqFwRd8YN]: hasVariant(
                      $state,
                      "_1",
                      "docters"
                    )
                  })}
                  role={"img"}
                />
              </div>
              <div
                data-plasmic-name={"mensah2"}
                data-plasmic-override={overrides.mensah2}
                className={classNames(projectcss.all, sty.mensah2, {
                  [sty.mensah2_1_chatviow]: hasVariant(
                    $state,
                    "_1",
                    "chatviow"
                  ),
                  [sty.mensah2_1_docter]: hasVariant($state, "_1", "docter"),
                  [sty.mensah2_1_docters]: hasVariant($state, "_1", "docters")
                })}
              >
                <PlasmicImg__
                  alt={""}
                  className={classNames(sty.img__spXcG, {
                    [sty.img_1_chatviow__spXcGlEmdG]: hasVariant(
                      $state,
                      "_1",
                      "chatviow"
                    ),
                    [sty.img_1_docters__spXcGRd8YN]: hasVariant(
                      $state,
                      "_1",
                      "docters"
                    )
                  })}
                  displayHeight={
                    hasVariant($state, "_1", "chatviow") ? "50px" : "79px"
                  }
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={
                    hasVariant($state, "_1", "chatviow") ? "50px" : "79px"
                  }
                  loading={"lazy"}
                  src={{
                    src: "/plasmic/liom_tools/images/imagePlaceholder.svg",
                    fullWidth: 79,
                    fullHeight: 79,
                    aspectRatio: 1
                  }}
                />

                <div
                  className={classNames(projectcss.all, sty.freeBox__rIpS, {
                    [sty.freeBox_1_chatviow__rIpSlEmdG]: hasVariant(
                      $state,
                      "_1",
                      "chatviow"
                    ),
                    [sty.freeBox_1_docters__rIpSRd8YN]: hasVariant(
                      $state,
                      "_1",
                      "docters"
                    )
                  })}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__dIjG,
                      {
                        [sty.text_1_chatviow__dIjGlEmdG]: hasVariant(
                          $state,
                          "_1",
                          "chatviow"
                        ),
                        [sty.text_1_docters__dIjGRd8YN]: hasVariant(
                          $state,
                          "_1",
                          "docters"
                        )
                      }
                    )}
                  >
                    {"Dr. Mensah T"}
                  </div>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__bgGv0,
                      {
                        [sty.text_1_chatviow__bgGv0LEmdG]: hasVariant(
                          $state,
                          "_1",
                          "chatviow"
                        ),
                        [sty.text_1_docters__bgGv0Rd8YN]: hasVariant(
                          $state,
                          "_1",
                          "docters"
                        )
                      }
                    )}
                  >
                    {hasVariant($state, "_1", "chatviow")
                      ? "\u0633\u0644\u0627\u0645 \u062f\u06a9\u062a\u0631 \u062d\u0627\u0644\u062a\u0648\u0646 \u0686\u0637\u0648\u0631\u0647 \u061f"
                      : "Oncologists"}
                  </div>
                </div>
                <div
                  className={classNames(projectcss.all, sty.freeBox__qG4Ar, {
                    [sty.freeBox_1_chatviow__qG4ArlEmdG]: hasVariant(
                      $state,
                      "_1",
                      "chatviow"
                    ),
                    [sty.freeBox_1_docters__qG4ArRd8YN]: hasVariant(
                      $state,
                      "_1",
                      "docters"
                    )
                  })}
                >
                  <div
                    className={classNames(projectcss.all, sty.freeBox__qrlZk, {
                      [sty.freeBox_1_chatviow__qrlZKlEmdG]: hasVariant(
                        $state,
                        "_1",
                        "chatviow"
                      ),
                      [sty.freeBox_1_docters__qrlZkRd8YN]: hasVariant(
                        $state,
                        "_1",
                        "docters"
                      )
                    })}
                  >
                    <Star
                      action={true}
                      className={classNames("__wab_instance", sty.star__m1F1Y, {
                        [sty.star_1_chatviow__m1F1YlEmdG]: hasVariant(
                          $state,
                          "_1",
                          "chatviow"
                        ),
                        [sty.star_1_docters__m1F1YRd8YN]: hasVariant(
                          $state,
                          "_1",
                          "docters"
                        )
                      })}
                    />

                    <Star
                      action={true}
                      className={classNames("__wab_instance", sty.star__kb61I, {
                        [sty.star_1_chatviow__kb61IlEmdG]: hasVariant(
                          $state,
                          "_1",
                          "chatviow"
                        ),
                        [sty.star_1_docters__kb61IRd8YN]: hasVariant(
                          $state,
                          "_1",
                          "docters"
                        )
                      })}
                    />

                    <Star
                      action={true}
                      className={classNames("__wab_instance", sty.star__okBbE, {
                        [sty.star_1_chatviow__okBbElEmdG]: hasVariant(
                          $state,
                          "_1",
                          "chatviow"
                        ),
                        [sty.star_1_docters__okBbERd8YN]: hasVariant(
                          $state,
                          "_1",
                          "docters"
                        )
                      })}
                    />

                    <Star
                      action={true}
                      className={classNames("__wab_instance", sty.star__qogE, {
                        [sty.star_1_chatviow__qogELEmdG]: hasVariant(
                          $state,
                          "_1",
                          "chatviow"
                        ),
                        [sty.star_1_docters__qogERd8YN]: hasVariant(
                          $state,
                          "_1",
                          "docters"
                        )
                      })}
                    />

                    <Star
                      action={true}
                      className={classNames("__wab_instance", sty.star__nSTE, {
                        [sty.star_1_chatviow__nSTElEmdG]: hasVariant(
                          $state,
                          "_1",
                          "chatviow"
                        ),
                        [sty.star_1_docters__nSTERd8YN]: hasVariant(
                          $state,
                          "_1",
                          "docters"
                        )
                      })}
                    />

                    <Star
                      action={true}
                      className={classNames(
                        "__wab_instance",
                        sty.star___7U6AE,
                        {
                          [sty.star_1_chatviow___7U6AElEmdG]: hasVariant(
                            $state,
                            "_1",
                            "chatviow"
                          ),
                          [sty.star_1_docters___7U6AERd8YN]: hasVariant(
                            $state,
                            "_1",
                            "docters"
                          )
                        }
                      )}
                    />
                  </div>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__aLQv,
                      {
                        [sty.text_1_chatviow__aLQvlEmdG]: hasVariant(
                          $state,
                          "_1",
                          "chatviow"
                        ),
                        [sty.text_1_docters__aLQvRd8YN]: hasVariant(
                          $state,
                          "_1",
                          "docters"
                        )
                      }
                    )}
                  >
                    {
                      "\u062a\u0639\u062f\u0627\u062f \u0645\u0631\u0627\u062c\u0639 (150)"
                    }
                  </div>
                </div>
              </div>
            </div>
          ) : null}
          {(
            hasVariant($state, "_1", "chatviow")
              ? true
              : hasVariant($state, "_1", "docter")
              ? true
              : false
          ) ? (
            <div
              data-plasmic-name={"doctorsDetails"}
              data-plasmic-override={overrides.doctorsDetails}
              className={classNames(projectcss.all, sty.doctorsDetails, {
                [sty.doctorsDetails_1_chatviow]: hasVariant(
                  $state,
                  "_1",
                  "chatviow"
                ),
                [sty.doctorsDetails_1_docter]: hasVariant(
                  $state,
                  "_1",
                  "docter"
                )
              })}
            >
              <PlasmicIcon__
                PlasmicIconType={
                  hasVariant($state, "_1", "chatviow")
                    ? Icon2Icon
                    : hasVariant($state, "_1", "docter")
                    ? Icon2Icon
                    : "div"
                }
                className={classNames(projectcss.all, sty.svg__qM6YX, {
                  [sty.svg_1_chatviow__qM6YXlEmdG]: hasVariant(
                    $state,
                    "_1",
                    "chatviow"
                  ),
                  [sty.svg_1_docter__qM6YXiDhcT]: hasVariant(
                    $state,
                    "_1",
                    "docter"
                  )
                })}
                role={"img"}
              />

              <div
                data-plasmic-name={"bg2"}
                data-plasmic-override={overrides.bg2}
                className={classNames(projectcss.all, sty.bg2, {
                  [sty.bg2_1_chatviow]: hasVariant($state, "_1", "chatviow"),
                  [sty.bg2_1_docter]: hasVariant($state, "_1", "docter"),
                  [sty.bg2_1_docters]: hasVariant($state, "_1", "docters")
                })}
              >
                <PlasmicImg__
                  alt={""}
                  className={classNames(sty.img__tsyky, {
                    [sty.img_1_chatviow__tsykylEmdG]: hasVariant(
                      $state,
                      "_1",
                      "chatviow"
                    ),
                    [sty.img_1_docter__tsykyiDhcT]: hasVariant(
                      $state,
                      "_1",
                      "docter"
                    )
                  })}
                  displayHeight={"118px"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"118px"}
                  loading={"lazy"}
                  src={{
                    src: "/plasmic/liom_tools/images/image7.png",
                    fullWidth: 1302,
                    fullHeight: 900,
                    aspectRatio: undefined
                  }}
                />

                <div
                  className={classNames(projectcss.all, sty.freeBox___0S8W5, {
                    [sty.freeBox_1_chatviow___0S8W5LEmdG]: hasVariant(
                      $state,
                      "_1",
                      "chatviow"
                    ),
                    [sty.freeBox_1_docter___0S8W5IDhcT]: hasVariant(
                      $state,
                      "_1",
                      "docter"
                    )
                  })}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__cey64,
                      {
                        [sty.text_1_chatviow__cey64LEmdG]: hasVariant(
                          $state,
                          "_1",
                          "chatviow"
                        ),
                        [sty.text_1_docter__cey64IDhcT]: hasVariant(
                          $state,
                          "_1",
                          "docter"
                        )
                      }
                    )}
                  >
                    {"Dr. Bellamy Nicholas"}
                  </div>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__ax3R,
                      {
                        [sty.text_1_chatviow__ax3RlEmdG]: hasVariant(
                          $state,
                          "_1",
                          "chatviow"
                        ),
                        [sty.text_1_docter__ax3RiDhcT]: hasVariant(
                          $state,
                          "_1",
                          "docter"
                        )
                      }
                    )}
                  >
                    {"Viralogist"}
                  </div>
                </div>
                <div
                  className={classNames(projectcss.all, sty.freeBox___4MCh, {
                    [sty.freeBox_1_chatviow___4MChlEmdG]: hasVariant(
                      $state,
                      "_1",
                      "chatviow"
                    ),
                    [sty.freeBox_1_docter___4MChiDhcT]: hasVariant(
                      $state,
                      "_1",
                      "docter"
                    )
                  })}
                >
                  <div
                    data-plasmic-name={"patients"}
                    data-plasmic-override={overrides.patients}
                    className={classNames(projectcss.all, sty.patients, {
                      [sty.patients_1_chatviow]: hasVariant(
                        $state,
                        "_1",
                        "chatviow"
                      ),
                      [sty.patients_1_docter]: hasVariant(
                        $state,
                        "_1",
                        "docter"
                      )
                    })}
                  >
                    <div
                      data-plasmic-name={"group"}
                      data-plasmic-override={overrides.group}
                      className={classNames(projectcss.all, sty.group, {
                        [sty.group_1_chatviow]: hasVariant(
                          $state,
                          "_1",
                          "chatviow"
                        ),
                        [sty.group_1_docter]: hasVariant($state, "_1", "docter")
                      })}
                    >
                      <div
                        data-plasmic-name={"rectangle14"}
                        data-plasmic-override={overrides.rectangle14}
                        className={classNames(projectcss.all, sty.rectangle14, {
                          [sty.rectangle14_1_chatviow]: hasVariant(
                            $state,
                            "_1",
                            "chatviow"
                          ),
                          [sty.rectangle14_1_docter]: hasVariant(
                            $state,
                            "_1",
                            "docter"
                          )
                        })}
                      >
                        <Icon86Icon
                          className={classNames(
                            projectcss.all,
                            sty.svg___3R2Wn
                          )}
                          role={"img"}
                        />
                      </div>
                    </div>
                    <div
                      className={classNames(projectcss.all, sty.freeBox__uTn1, {
                        [sty.freeBox_1_chatviow__uTn1LEmdG]: hasVariant(
                          $state,
                          "_1",
                          "chatviow"
                        ),
                        [sty.freeBox_1_docter__uTn1IDhcT]: hasVariant(
                          $state,
                          "_1",
                          "docter"
                        )
                      })}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__bc42Z,
                          {
                            [sty.text_1_chatviow__bc42ZlEmdG]: hasVariant(
                              $state,
                              "_1",
                              "chatviow"
                            ),
                            [sty.text_1_docter__bc42ZiDhcT]: hasVariant(
                              $state,
                              "_1",
                              "docter"
                            )
                          }
                        )}
                      >
                        {"1000+"}
                      </div>
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text___4TenZ,
                          {
                            [sty.text_1_chatviow___4TenZlEmdG]: hasVariant(
                              $state,
                              "_1",
                              "chatviow"
                            ),
                            [sty.text_1_docter___4TenZiDhcT]: hasVariant(
                              $state,
                              "_1",
                              "docter"
                            )
                          }
                        )}
                      >
                        {
                          "\u0631\u062a\u0628\u0647 \u0628\u0646\u062f\u06cc \u0647\u0627"
                        }
                      </div>
                    </div>
                  </div>
                  <div
                    data-plasmic-name={"patients2"}
                    data-plasmic-override={overrides.patients2}
                    className={classNames(projectcss.all, sty.patients2, {
                      [sty.patients2_1_chatviow]: hasVariant(
                        $state,
                        "_1",
                        "chatviow"
                      ),
                      [sty.patients2_1_docter]: hasVariant(
                        $state,
                        "_1",
                        "docter"
                      )
                    })}
                  >
                    <div
                      data-plasmic-name={"group2"}
                      data-plasmic-override={overrides.group2}
                      className={classNames(projectcss.all, sty.group2, {
                        [sty.group2_1_chatviow]: hasVariant(
                          $state,
                          "_1",
                          "chatviow"
                        ),
                        [sty.group2_1_docter]: hasVariant(
                          $state,
                          "_1",
                          "docter"
                        )
                      })}
                    >
                      <div
                        data-plasmic-name={"rectangle15"}
                        data-plasmic-override={overrides.rectangle15}
                        className={classNames(projectcss.all, sty.rectangle15, {
                          [sty.rectangle15_1_chatviow]: hasVariant(
                            $state,
                            "_1",
                            "chatviow"
                          ),
                          [sty.rectangle15_1_docter]: hasVariant(
                            $state,
                            "_1",
                            "docter"
                          )
                        })}
                      >
                        <Icon80Icon
                          className={classNames(
                            projectcss.all,
                            sty.svg___0SwWy
                          )}
                          role={"img"}
                        />
                      </div>
                    </div>
                    <div
                      className={classNames(
                        projectcss.all,
                        sty.freeBox__enYiw,
                        {
                          [sty.freeBox_1_chatviow__enYiwlEmdG]: hasVariant(
                            $state,
                            "_1",
                            "chatviow"
                          ),
                          [sty.freeBox_1_docter__enYiwiDhcT]: hasVariant(
                            $state,
                            "_1",
                            "docter"
                          )
                        }
                      )}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__p1AM,
                          {
                            [sty.text_1_chatviow__p1AMlEmdG]: hasVariant(
                              $state,
                              "_1",
                              "chatviow"
                            ),
                            [sty.text_1_docter__p1AMiDhcT]: hasVariant(
                              $state,
                              "_1",
                              "docter"
                            )
                          }
                        )}
                      >
                        {"1000+"}
                      </div>
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__i7DZl,
                          {
                            [sty.text_1_chatviow__i7DZllEmdG]: hasVariant(
                              $state,
                              "_1",
                              "chatviow"
                            ),
                            [sty.text_1_docter__i7DZliDhcT]: hasVariant(
                              $state,
                              "_1",
                              "docter"
                            )
                          }
                        )}
                      >
                        {hasVariant($state, "_1", "chatviow")
                          ? "\u0633\u0627\u0628\u0642\u0647"
                          : hasVariant($state, "_1", "docter")
                          ? "\u0633\u0627\u0628\u0642\u0647"
                          : "Patients"}
                      </div>
                    </div>
                  </div>
                  <div
                    data-plasmic-name={"patients3"}
                    data-plasmic-override={overrides.patients3}
                    className={classNames(projectcss.all, sty.patients3, {
                      [sty.patients3_1_chatviow]: hasVariant(
                        $state,
                        "_1",
                        "chatviow"
                      ),
                      [sty.patients3_1_docter]: hasVariant(
                        $state,
                        "_1",
                        "docter"
                      )
                    })}
                  >
                    <div
                      data-plasmic-name={"group3"}
                      data-plasmic-override={overrides.group3}
                      className={classNames(projectcss.all, sty.group3, {
                        [sty.group3_1_chatviow]: hasVariant(
                          $state,
                          "_1",
                          "chatviow"
                        ),
                        [sty.group3_1_docter]: hasVariant(
                          $state,
                          "_1",
                          "docter"
                        )
                      })}
                    >
                      <div
                        data-plasmic-name={"rectangle16"}
                        data-plasmic-override={overrides.rectangle16}
                        className={classNames(projectcss.all, sty.rectangle16, {
                          [sty.rectangle16_1_chatviow]: hasVariant(
                            $state,
                            "_1",
                            "chatviow"
                          ),
                          [sty.rectangle16_1_docter]: hasVariant(
                            $state,
                            "_1",
                            "docter"
                          )
                        })}
                      >
                        <Icon85Icon
                          className={classNames(
                            projectcss.all,
                            sty.svg___0ONx0
                          )}
                          role={"img"}
                        />
                      </div>
                    </div>
                    <div
                      className={classNames(projectcss.all, sty.freeBox__paao, {
                        [sty.freeBox_1_chatviow__paaoLEmdG]: hasVariant(
                          $state,
                          "_1",
                          "chatviow"
                        ),
                        [sty.freeBox_1_docter__paaoIDhcT]: hasVariant(
                          $state,
                          "_1",
                          "docter"
                        )
                      })}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__l9Hco,
                          {
                            [sty.text_1_chatviow__l9HcolEmdG]: hasVariant(
                              $state,
                              "_1",
                              "chatviow"
                            ),
                            [sty.text_1_docter__l9HcoiDhcT]: hasVariant(
                              $state,
                              "_1",
                              "docter"
                            )
                          }
                        )}
                      >
                        {"1000+"}
                      </div>
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__xZl9N,
                          {
                            [sty.text_1_chatviow__xZl9NlEmdG]: hasVariant(
                              $state,
                              "_1",
                              "chatviow"
                            ),
                            [sty.text_1_docter__xZl9NiDhcT]: hasVariant(
                              $state,
                              "_1",
                              "docter"
                            ),
                            [sty.text_1_docters__xZl9NRd8YN]: hasVariant(
                              $state,
                              "_1",
                              "docters"
                            )
                          }
                        )}
                      >
                        {hasVariant($state, "_1", "docter")
                          ? "\u062a\u0639\u062f\u0627\u062f \u0648\u06cc\u0632\u06cc\u062a"
                          : "Patients"}
                      </div>
                    </div>
                  </div>
                </div>
              </div>
              <div
                className={classNames(projectcss.all, sty.freeBox__lHiTa, {
                  [sty.freeBox_1_chatviow__lHiTalEmdG]: hasVariant(
                    $state,
                    "_1",
                    "chatviow"
                  ),
                  [sty.freeBox_1_docter__lHiTaiDhcT]: hasVariant(
                    $state,
                    "_1",
                    "docter"
                  )
                })}
              >
                <div
                  data-plasmic-name={"about"}
                  data-plasmic-override={overrides.about}
                  className={classNames(projectcss.all, sty.about, {
                    [sty.about_1_chatviow]: hasVariant(
                      $state,
                      "_1",
                      "chatviow"
                    ),
                    [sty.about_1_docter]: hasVariant($state, "_1", "docter")
                  })}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__p7Y0S,
                      {
                        [sty.text_1_chatviow__p7Y0SlEmdG]: hasVariant(
                          $state,
                          "_1",
                          "chatviow"
                        ),
                        [sty.text_1_docter__p7Y0SiDhcT]: hasVariant(
                          $state,
                          "_1",
                          "docter"
                        )
                      }
                    )}
                  >
                    {hasVariant($state, "_1", "chatviow")
                      ? "\u0622\u0634\u0646\u0627\u06cc\u06cc \u0628\u0627 \u067e\u0632\u0634\u06a9"
                      : hasVariant($state, "_1", "docter")
                      ? "\u0622\u0634\u0646\u0627\u06cc\u06cc \u0628\u0627 \u067e\u0632\u0634\u06a9"
                      : "About Doctor"}
                  </div>
                  <div
                    data-plasmic-name={"drBellamyNicholas"}
                    data-plasmic-override={overrides.drBellamyNicholas}
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.drBellamyNicholas,
                      {
                        [sty.drBellamyNicholas_1_chatviow]: hasVariant(
                          $state,
                          "_1",
                          "chatviow"
                        ),
                        [sty.drBellamyNicholas_1_docter]: hasVariant(
                          $state,
                          "_1",
                          "docter"
                        )
                      }
                    )}
                  >
                    {hasVariant($state, "_1", "chatviow")
                      ? "\u062f\u06a9\u062a\u0631 [\u0646\u0627\u0645 \u067e\u0632\u0634\u06a9]\u060c \u0645\u062a\u062e\u0635\u0635 [\u062a\u062e\u0635\u0635 \u067e\u0632\u0634\u06a9] \u0628\u0627 [\u062a\u0639\u062f\u0627\u062f] \u0633\u0627\u0644 \u062a\u062c\u0631\u0628\u0647\u060c \u0622\u0645\u0627\u062f\u0647 \u0627\u0631\u0627\u0626\u0647 \u062e\u062f\u0645\u0627\u062a \u062f\u0631\u0645\u0627\u0646\u06cc \u0628\u0627 \u0628\u0647\u062a\u0631\u06cc\u0646 \u0631\u0648\u0634\u200c\u0647\u0627 \u0648 \u062f\u0627\u0646\u0634 \u0631\u0648\u0632 \u0627\u0633\u062a. \u0627\u06cc\u0634\u0627\u0646 \u0641\u0627\u0631\u063a\u200c\u0627\u0644\u062a\u062d\u0635\u06cc\u0644 \u0627\u0632 \u062f\u0627\u0646\u0634\u06af\u0627\u0647 [\u0646\u0627\u0645 \u062f\u0627\u0646\u0634\u06af\u0627\u0647] \u0628\u0648\u062f\u0647 \u0648 \u0628\u0627 \u0631\u0648\u06cc\u06a9\u0631\u062f\u06cc \u0635\u0645\u06cc\u0645\u06cc \u0648 \u062d\u0631\u0641\u0647\u200c\u0627\u06cc \u0628\u0647 \u0628\u06cc\u0645\u0627\u0631\u0627\u0646 \u0645\u0634\u0627\u0648\u0631\u0647 \u0645\u06cc\u200c\u062f\u0647\u062f. \u0628\u0631\u0627\u06cc \u062f\u0631\u06cc\u0627\u0641\u062a \u0646\u0648\u0628\u062a \u06cc\u0627 \u0627\u0631\u0633\u0627\u0644 \u067e\u06cc\u0627\u0645\u060c \u0644\u0637\u0641\u0627\u064b \u0627\u0632 \u0637\u0631\u06cc\u0642 \u0628\u062e\u0634 \u0645\u0631\u0628\u0648\u0637\u0647 \u0627\u0642\u062f\u0627\u0645 \u06a9\u0646\u06cc\u062f."
                      : hasVariant($state, "_1", "docter")
                      ? "\u062f\u06a9\u062a\u0631 [\u0646\u0627\u0645 \u067e\u0632\u0634\u06a9]\u060c \u0645\u062a\u062e\u0635\u0635 [\u062a\u062e\u0635\u0635 \u067e\u0632\u0634\u06a9] \u0628\u0627 [\u062a\u0639\u062f\u0627\u062f] \u0633\u0627\u0644 \u062a\u062c\u0631\u0628\u0647\u060c \u0622\u0645\u0627\u062f\u0647 \u0627\u0631\u0627\u0626\u0647 \u062e\u062f\u0645\u0627\u062a \u062f\u0631\u0645\u0627\u0646\u06cc \u0628\u0627 \u0628\u0647\u062a\u0631\u06cc\u0646 \u0631\u0648\u0634\u200c\u0647\u0627 \u0648 \u062f\u0627\u0646\u0634 \u0631\u0648\u0632 \u0627\u0633\u062a. \u0627\u06cc\u0634\u0627\u0646 \u0641\u0627\u0631\u063a\u200c\u0627\u0644\u062a\u062d\u0635\u06cc\u0644 \u0627\u0632 \u062f\u0627\u0646\u0634\u06af\u0627\u0647 [\u0646\u0627\u0645 \u062f\u0627\u0646\u0634\u06af\u0627\u0647] \u0628\u0648\u062f\u0647 \u0648 \u0628\u0627 \u0631\u0648\u06cc\u06a9\u0631\u062f\u06cc \u0635\u0645\u06cc\u0645\u06cc \u0648 \u062d\u0631\u0641\u0647\u200c\u0627\u06cc \u0628\u0647 \u0628\u06cc\u0645\u0627\u0631\u0627\u0646 \u0645\u0634\u0627\u0648\u0631\u0647 \u0645\u06cc\u200c\u062f\u0647\u062f. \u0628\u0631\u0627\u06cc \u062f\u0631\u06cc\u0627\u0641\u062a \u0646\u0648\u0628\u062a \u06cc\u0627 \u0627\u0631\u0633\u0627\u0644 \u067e\u06cc\u0627\u0645\u060c \u0644\u0637\u0641\u0627\u064b \u0627\u0632 \u0637\u0631\u06cc\u0642 \u0628\u062e\u0634 \u0645\u0631\u0628\u0648\u0637\u0647 \u0627\u0642\u062f\u0627\u0645 \u06a9\u0646\u06cc\u062f."
                      : "Dr. Bellamy Nicholas is a top specialist at London Bridge Hospital at London. He has achieved several awards and recognition for is contribution and service in his own field. He is available for private consultation. "}
                  </div>
                </div>
                <div
                  data-plasmic-name={"workingTime"}
                  data-plasmic-override={overrides.workingTime}
                  className={classNames(projectcss.all, sty.workingTime, {
                    [sty.workingTime_1_chatviow]: hasVariant(
                      $state,
                      "_1",
                      "chatviow"
                    ),
                    [sty.workingTime_1_docter]: hasVariant(
                      $state,
                      "_1",
                      "docter"
                    )
                  })}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___3Wb2M,
                      {
                        [sty.text_1_chatviow___3Wb2MlEmdG]: hasVariant(
                          $state,
                          "_1",
                          "chatviow"
                        ),
                        [sty.text_1_docter___3Wb2MiDhcT]: hasVariant(
                          $state,
                          "_1",
                          "docter"
                        )
                      }
                    )}
                  >
                    {hasVariant($state, "_1", "chatviow")
                      ? "\u0633\u0627\u0639\u0627\u062a \u067e\u0627\u0633\u062e\u06af\u0648\u06cc\u06cc"
                      : hasVariant($state, "_1", "docter")
                      ? "\u0633\u0627\u0639\u0627\u062a \u067e\u0627\u0633\u062e\u06af\u0648\u06cc\u06cc"
                      : "Working time"}
                  </div>
                  <div
                    data-plasmic-name={"monSat0830Am"}
                    data-plasmic-override={overrides.monSat0830Am}
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.monSat0830Am,
                      {
                        [sty.monSat0830Am_1_chatviow]: hasVariant(
                          $state,
                          "_1",
                          "chatviow"
                        ),
                        [sty.monSat0830Am_1_docter]: hasVariant(
                          $state,
                          "_1",
                          "docter"
                        )
                      }
                    )}
                  >
                    {hasVariant($state, "_1", "chatviow")
                      ? "\u0631\u0648\u0632\u0647\u0627\u06cc \u0632\u0648\u062c (\u0633\u0627\u0639\u062a 9 \u0627\u0644\u06cc 15)"
                      : hasVariant($state, "_1", "docter")
                      ? "\u0631\u0648\u0632\u0647\u0627\u06cc \u0632\u0648\u062c (\u0633\u0627\u0639\u062a 9 \u0627\u0644\u06cc 15)"
                      : "Mon - Sat (08:30 AM - 09:00 PM)"}
                  </div>
                </div>
              </div>
            </div>
          ) : null}
          <Timer
            data-plasmic-name={"timer"}
            data-plasmic-override={overrides.timer}
            className={classNames("__wab_instance", sty.timer)}
            intervalSeconds={1}
            isRunning={true}
            onTick={async () => {
              const $steps = {};

              $steps["updateVariable"] = true
                ? (() => {
                    const actionArgs = {
                      variable: {
                        objRoot: $state,
                        variablePath: ["variable"]
                      },
                      operation: 0,
                      value: window.scrollY
                    };
                    return (({ variable, value, startIndex, deleteCount }) => {
                      if (!variable) {
                        return;
                      }
                      const { objRoot, variablePath } = variable;

                      $stateSet(objRoot, variablePath, value);
                      return value;
                    })?.apply(null, [actionArgs]);
                  })()
                : undefined;
              if (
                $steps["updateVariable"] != null &&
                typeof $steps["updateVariable"] === "object" &&
                typeof $steps["updateVariable"].then === "function"
              ) {
                $steps["updateVariable"] = await $steps["updateVariable"];
              }
            }}
            runWhileEditing={true}
          />

          <ButtonLiom
            data-plasmic-name={"buttonLiom"}
            data-plasmic-override={overrides.buttonLiom}
            className={classNames("__wab_instance", sty.buttonLiom)}
            color={generateStateValueProp($state, ["buttonLiom", "color"])}
            load={generateStateValueProp($state, ["buttonLiom", "load"])}
            onColorChange={async (...eventArgs: any) => {
              ((...eventArgs) => {
                generateStateOnChangeProp($state, ["buttonLiom", "color"])(
                  eventArgs[0]
                );
              }).apply(null, eventArgs);

              if (
                eventArgs.length > 1 &&
                eventArgs[1] &&
                eventArgs[1]._plasmic_state_init_
              ) {
                return;
              }
            }}
            onLoadChange={async (...eventArgs: any) => {
              ((...eventArgs) => {
                generateStateOnChangeProp($state, ["buttonLiom", "load"])(
                  eventArgs[0]
                );
              }).apply(null, eventArgs);

              if (
                eventArgs.length > 1 &&
                eventArgs[1] &&
                eventArgs[1]._plasmic_state_init_
              ) {
                return;
              }
            }}
          />

          <ButtonLiom
            data-plasmic-name={"buttonLiom2"}
            data-plasmic-override={overrides.buttonLiom2}
            className={classNames("__wab_instance", sty.buttonLiom2)}
            color={generateStateValueProp($state, ["buttonLiom2", "color"])}
            load={generateStateValueProp($state, ["buttonLiom2", "load"])}
            onColorChange={async (...eventArgs: any) => {
              ((...eventArgs) => {
                generateStateOnChangeProp($state, ["buttonLiom2", "color"])(
                  eventArgs[0]
                );
              }).apply(null, eventArgs);

              if (
                eventArgs.length > 1 &&
                eventArgs[1] &&
                eventArgs[1]._plasmic_state_init_
              ) {
                return;
              }
            }}
            onLoadChange={async (...eventArgs: any) => {
              ((...eventArgs) => {
                generateStateOnChangeProp($state, ["buttonLiom2", "load"])(
                  eventArgs[0]
                );
              }).apply(null, eventArgs);

              if (
                eventArgs.length > 1 &&
                eventArgs[1] &&
                eventArgs[1]._plasmic_state_init_
              ) {
                return;
              }
            }}
          />

          <Button
            data-plasmic-name={"button"}
            data-plasmic-override={overrides.button}
            className={classNames("__wab_instance", sty.button)}
          />
        </div>
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: [
    "root",
    "bg",
    "rectangle2",
    "\u0627",
    "\u06272",
    "rectangle",
    "findSuitableSpecia",
    "rectangle3",
    "speciality",
    "card6",
    "card4",
    "card8",
    "card5",
    "speciality2",
    "card9",
    "card10",
    "card11",
    "speciality3",
    "card12",
    "card13",
    "card14",
    "input",
    "mensah",
    "input2",
    "mensah2",
    "doctorsDetails",
    "bg2",
    "patients",
    "group",
    "rectangle14",
    "patients2",
    "group2",
    "rectangle15",
    "patients3",
    "group3",
    "rectangle16",
    "about",
    "drBellamyNicholas",
    "workingTime",
    "monSat0830Am",
    "timer",
    "buttonLiom",
    "buttonLiom2",
    "button"
  ],
  bg: ["bg", "rectangle2", "\u0627", "\u06272"],
  rectangle2: ["rectangle2", "\u0627", "\u06272"],
  ุง: ["\u0627"],
  ุง2: ["\u06272"],
  rectangle: ["rectangle", "findSuitableSpecia", "rectangle3"],
  findSuitableSpecia: ["findSuitableSpecia"],
  rectangle3: ["rectangle3"],
  speciality: ["speciality", "card6", "card4", "card8", "card5"],
  card6: ["card6"],
  card4: ["card4"],
  card8: ["card8"],
  card5: ["card5"],
  speciality2: ["speciality2", "card9", "card10", "card11"],
  card9: ["card9"],
  card10: ["card10"],
  card11: ["card11"],
  speciality3: ["speciality3", "card12", "card13", "card14"],
  card12: ["card12"],
  card13: ["card13"],
  card14: ["card14"],
  input: ["input"],
  mensah: ["mensah"],
  input2: ["input2"],
  mensah2: ["mensah2"],
  doctorsDetails: [
    "doctorsDetails",
    "bg2",
    "patients",
    "group",
    "rectangle14",
    "patients2",
    "group2",
    "rectangle15",
    "patients3",
    "group3",
    "rectangle16",
    "about",
    "drBellamyNicholas",
    "workingTime",
    "monSat0830Am"
  ],
  bg2: [
    "bg2",
    "patients",
    "group",
    "rectangle14",
    "patients2",
    "group2",
    "rectangle15",
    "patients3",
    "group3",
    "rectangle16"
  ],
  patients: ["patients", "group", "rectangle14"],
  group: ["group", "rectangle14"],
  rectangle14: ["rectangle14"],
  patients2: ["patients2", "group2", "rectangle15"],
  group2: ["group2", "rectangle15"],
  rectangle15: ["rectangle15"],
  patients3: ["patients3", "group3", "rectangle16"],
  group3: ["group3", "rectangle16"],
  rectangle16: ["rectangle16"],
  about: ["about", "drBellamyNicholas"],
  drBellamyNicholas: ["drBellamyNicholas"],
  workingTime: ["workingTime", "monSat0830Am"],
  monSat0830Am: ["monSat0830Am"],
  timer: ["timer"],
  buttonLiom: ["buttonLiom"],
  buttonLiom2: ["buttonLiom2"],
  button: ["button"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  (typeof PlasmicDescendants)[T][number];
type NodeDefaultElementType = {
  root: "div";
  bg: "div";
  rectangle2: "div";
  ุง: "div";
  ุง2: "div";
  rectangle: "div";
  findSuitableSpecia: "div";
  rectangle3: "div";
  speciality: "div";
  card6: "div";
  card4: "div";
  card8: "div";
  card5: "div";
  speciality2: "div";
  card9: "div";
  card10: "div";
  card11: "div";
  speciality3: "div";
  card12: "div";
  card13: "div";
  card14: "div";
  input: typeof Input;
  mensah: "div";
  input2: typeof Input;
  mensah2: "div";
  doctorsDetails: "div";
  bg2: "div";
  patients: "div";
  group: "div";
  rectangle14: "div";
  patients2: "div";
  group2: "div";
  rectangle15: "div";
  patients3: "div";
  group3: "div";
  rectangle16: "div";
  about: "div";
  drBellamyNicholas: "div";
  workingTime: "div";
  monSat0830Am: "div";
  timer: typeof Timer;
  buttonLiom: typeof ButtonLiom;
  buttonLiom2: typeof ButtonLiom;
  button: typeof Button;
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicClinic__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicClinic__VariantsArgs;
    args?: PlasmicClinic__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicClinic__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    // Specify args directly as props
    Omit<PlasmicClinic__ArgsType, ReservedPropsType> &
    // Specify overrides for each element directly as props
    Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    // Specify props for the root element
    Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: PlasmicDescendants[nodeName],
          internalArgPropNames: PlasmicClinic__ArgProps,
          internalVariantPropNames: PlasmicClinic__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicClinic__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicClinic";
  } else {
    func.displayName = `PlasmicClinic.${nodeName}`;
  }
  return func;
}

function withUsePlasmicAuth<P extends object>(
  WrappedComponent: React.ComponentType<P>
) {
  const WithUsePlasmicAuthComponent: React.FC<P> = props => {
    const dataSourceCtx = usePlasmicDataSourceContext() ?? {};
    const { isUserLoading, user, token } = plasmicAuth.usePlasmicAuth({
      appId: "3zKPdhWckw1SJpPYhK46Bs"
    });

    return (
      <PlasmicDataSourceContextProvider__
        value={{
          ...dataSourceCtx,
          isUserLoading,
          userAuthToken: token,
          user
        }}
      >
        <WrappedComponent {...props} />
      </PlasmicDataSourceContextProvider__>
    );
  };
  return WithUsePlasmicAuthComponent;
}

export const PlasmicClinic = Object.assign(
  // Top-level PlasmicClinic renders the root element
  withUsePlasmicAuth(makeNodeComponent("root")),
  {
    // Helper components rendering sub-elements
    bg: makeNodeComponent("bg"),
    rectangle2: makeNodeComponent("rectangle2"),
    ุง: makeNodeComponent("\u0627"),
    ุง2: makeNodeComponent("\u06272"),
    rectangle: makeNodeComponent("rectangle"),
    findSuitableSpecia: makeNodeComponent("findSuitableSpecia"),
    rectangle3: makeNodeComponent("rectangle3"),
    speciality: makeNodeComponent("speciality"),
    card6: makeNodeComponent("card6"),
    card4: makeNodeComponent("card4"),
    card8: makeNodeComponent("card8"),
    card5: makeNodeComponent("card5"),
    speciality2: makeNodeComponent("speciality2"),
    card9: makeNodeComponent("card9"),
    card10: makeNodeComponent("card10"),
    card11: makeNodeComponent("card11"),
    speciality3: makeNodeComponent("speciality3"),
    card12: makeNodeComponent("card12"),
    card13: makeNodeComponent("card13"),
    card14: makeNodeComponent("card14"),
    input: makeNodeComponent("input"),
    mensah: makeNodeComponent("mensah"),
    input2: makeNodeComponent("input2"),
    mensah2: makeNodeComponent("mensah2"),
    doctorsDetails: makeNodeComponent("doctorsDetails"),
    bg2: makeNodeComponent("bg2"),
    patients: makeNodeComponent("patients"),
    group: makeNodeComponent("group"),
    rectangle14: makeNodeComponent("rectangle14"),
    patients2: makeNodeComponent("patients2"),
    group2: makeNodeComponent("group2"),
    rectangle15: makeNodeComponent("rectangle15"),
    patients3: makeNodeComponent("patients3"),
    group3: makeNodeComponent("group3"),
    rectangle16: makeNodeComponent("rectangle16"),
    about: makeNodeComponent("about"),
    drBellamyNicholas: makeNodeComponent("drBellamyNicholas"),
    workingTime: makeNodeComponent("workingTime"),
    monSat0830Am: makeNodeComponent("monSat0830Am"),
    timer: makeNodeComponent("timer"),
    buttonLiom: makeNodeComponent("buttonLiom"),
    buttonLiom2: makeNodeComponent("buttonLiom2"),
    button: makeNodeComponent("button"),

    // Metadata about props expected for PlasmicClinic
    internalVariantProps: PlasmicClinic__VariantProps,
    internalArgProps: PlasmicClinic__ArgProps,

    // Page metadata
    pageMetadata: {
      title: "",
      description: "",
      ogImageSrc: "",
      canonical: ""
    }
  }
);

export default PlasmicClinic;
/* prettier-ignore-end */
