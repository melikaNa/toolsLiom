/* eslint-disable */
/* tslint:disable */
// @ts-nocheck
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: 3zKPdhWckw1SJpPYhK46Bs
// Component: OUwywVcxKl5x

import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";
import { useRouter } from "next/router";

import {
  Flex as Flex__,
  MultiChoiceArg,
  PlasmicDataSourceContextProvider as PlasmicDataSourceContextProvider__,
  PlasmicIcon as PlasmicIcon__,
  PlasmicImg as PlasmicImg__,
  PlasmicLink as PlasmicLink__,
  PlasmicPageGuard as PlasmicPageGuard__,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  Stack as Stack__,
  StrictProps,
  Trans as Trans__,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  generateOnMutateForSpec,
  generateStateOnChangeProp,
  generateStateOnChangePropForCodeComponents,
  generateStateValueProp,
  get as $stateGet,
  hasVariant,
  initializeCodeComponentStates,
  initializePlasmicStates,
  makeFragment,
  omit,
  pick,
  renderPlasmicSlot,
  set as $stateSet,
  useCurrentUser,
  useDollarState,
  usePlasmicTranslator,
  useTrigger,
  wrapWithClassName
} from "@plasmicapp/react-web";
import {
  DataCtxReader as DataCtxReader__,
  useDataEnv,
  useGlobalActions
} from "@plasmicapp/react-web/lib/host";

import { LottieWrapper } from "@plasmicpkgs/lottie-react";
import { _useGlobalVariants } from "./plasmic"; // plasmic-import: 3zKPdhWckw1SJpPYhK46Bs/projectModule
import { _useStyleTokens } from "./PlasmicStyleTokensProvider"; // plasmic-import: 3zKPdhWckw1SJpPYhK46Bs/styleTokensProvider
import { _useStyleTokens as useStyleTokens_antd_5_hostless } from ""; // plasmic-import: ohDidvG9XsCeFumugENU3J/styleTokensProvider
import { _useStyleTokens as useStyleTokens_plasmic_rich_components } from ""; // plasmic-import: jkU633o1Cz7HrJdwdxhVHk/styleTokensProvider
import { _useStyleTokens as useStyleTokens_paziresh_24_design_system } from ""; // plasmic-import: 6HBcNwr8dz9LuS1Qe36xa5/styleTokensProvider
import { _useStyleTokens as useStyleTokens_hamdast_sdk } from ""; // plasmic-import: 9yPKYrtYPnCNEj6BTTfHnY/styleTokensProvider

import "@plasmicapp/react-web/lib/plasmic.css";

import projectcss from "./plasmic.module.css"; // plasmic-import: 3zKPdhWckw1SJpPYhK46Bs/projectcss
import sty from "./PlasmicLoadingCompopnentGray.module.css"; // plasmic-import: OUwywVcxKl5x/css

createPlasmicElementProxy;

export type PlasmicLoadingCompopnentGray__VariantMembers = {};
export type PlasmicLoadingCompopnentGray__VariantsArgs = {};
type VariantPropType = keyof PlasmicLoadingCompopnentGray__VariantsArgs;
export const PlasmicLoadingCompopnentGray__VariantProps =
  new Array<VariantPropType>();

export type PlasmicLoadingCompopnentGray__ArgsType = {};
type ArgPropType = keyof PlasmicLoadingCompopnentGray__ArgsType;
export const PlasmicLoadingCompopnentGray__ArgProps = new Array<ArgPropType>();

export type PlasmicLoadingCompopnentGray__OverridesType = {
  root?: Flex__<"div">;
  lottie?: Flex__<typeof LottieWrapper>;
};

export interface DefaultLoadingCompopnentGrayProps {
  className?: string;
}

const $$ = {};

function useNextRouter() {
  try {
    return useRouter();
  } catch {}
  return undefined;
}

function PlasmicLoadingCompopnentGray__RenderFunc(props: {
  variants: PlasmicLoadingCompopnentGray__VariantsArgs;
  args: PlasmicLoadingCompopnentGray__ArgsType;
  overrides: PlasmicLoadingCompopnentGray__OverridesType;
  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;

  const args = React.useMemo(
    () =>
      Object.assign(
        {},
        Object.fromEntries(
          Object.entries(props.args).filter(([_, v]) => v !== undefined)
        )
      ),
    [props.args]
  );

  const $props = {
    ...args,
    ...variants
  };

  const __nextRouter = useNextRouter();

  const $ctx = useDataEnv?.() || {};
  const refsRef = React.useRef({});
  const $refs = refsRef.current;

  const currentUser = useCurrentUser?.() || {};

  const styleTokensClassNames = _useStyleTokens();
  const styleTokensClassNames_antd_5_hostless =
    useStyleTokens_antd_5_hostless();
  const styleTokensClassNames_plasmic_rich_components =
    useStyleTokens_plasmic_rich_components();
  const styleTokensClassNames_paziresh_24_design_system =
    useStyleTokens_paziresh_24_design_system();
  const styleTokensClassNames_hamdast_sdk = useStyleTokens_hamdast_sdk();

  return (
    <div
      data-plasmic-name={"root"}
      data-plasmic-override={overrides.root}
      data-plasmic-root={true}
      data-plasmic-for-node={forNode}
      className={classNames(
        projectcss.all,
        projectcss.root_reset,
        projectcss.plasmic_default_styles,
        projectcss.plasmic_mixins,
        styleTokensClassNames,
        styleTokensClassNames_antd_5_hostless,
        styleTokensClassNames_plasmic_rich_components,
        styleTokensClassNames_paziresh_24_design_system,
        styleTokensClassNames_hamdast_sdk,
        sty.root
      )}
    >
      <LottieWrapper
        data-plasmic-name={"lottie"}
        data-plasmic-override={overrides.lottie}
        animationData={{
          v: "5.7.11",
          fr: 60,
          ip: 0,
          op: 81,
          w: 1920,
          h: 1080,
          nm: "Loading Dots",
          ddd: 0,
          assets: [],
          layers: [
            {
              ddd: 0,
              ind: 1,
              ty: 4,
              nm: "Dot4",
              sr: 1,
              ks: {
                o: {
                  a: 1,
                  k: [
                    {
                      i: { x: [0.667], y: [1] },
                      o: { x: [0.333], y: [0] },
                      t: 25,
                      s: [25]
                    },
                    {
                      i: { x: [0.667], y: [1] },
                      o: { x: [0.333], y: [0] },
                      t: 39,
                      s: [100]
                    },
                    { t: 55, s: [25] }
                  ],
                  ix: 11
                },
                r: { a: 0, k: 0, ix: 10 },
                p: {
                  a: 1,
                  k: [
                    {
                      i: { x: 0.667, y: 1 },
                      o: { x: 0.333, y: 0 },
                      t: 25,
                      s: [1142, 540, 0],
                      to: null,
                      ti: null
                    },
                    {
                      i: { x: 0.667, y: 1 },
                      o: { x: 0.333, y: 0 },
                      t: 39,
                      s: [1142, 500, 0],
                      to: null,
                      ti: null
                    },
                    { t: 55, s: [1142, 540, 0] }
                  ],
                  ix: 2,
                  l: 2
                },
                a: { a: 0, k: [-284, 92, 0], ix: 1, l: 2 },
                s: {
                  a: 1,
                  k: [
                    {
                      i: { x: [0.667, 0.667, 0.667], y: [1, 1, 1] },
                      o: { x: [0.333, 0.333, 0.333], y: [0, 0, 0] },
                      t: 25,
                      s: [50, 50, 100]
                    },
                    {
                      i: { x: [0.667, 0.667, 0.667], y: [1, 1, 1] },
                      o: { x: [0.333, 0.333, 0.333], y: [0, 0, 0] },
                      t: 39,
                      s: [75, 75, 100]
                    },
                    { t: 55, s: [50, 50, 100] }
                  ],
                  ix: 6,
                  l: 2
                }
              },
              ao: 0,
              shapes: [
                {
                  ty: "gr",
                  it: [
                    {
                      d: 1,
                      ty: "el",
                      s: { a: 0, k: [120, 120], ix: 2 },
                      p: { a: 0, k: [0, 0], ix: 3 },
                      nm: "Ellipse Path 1",
                      mn: "ADBE Vector Shape - Ellipse",
                      hd: false,
                      _render: true
                    },
                    {
                      ty: "fl",
                      c: { a: 0, k: [0.4549, 0.4549, 0.4549, 1], ix: 4 },
                      o: { a: 0, k: 100, ix: 5 },
                      r: 1,
                      bm: 0,
                      nm: "Fill 1",
                      mn: "ADBE Vector Graphic - Fill",
                      hd: false,
                      _render: true
                    },
                    {
                      ty: "tr",
                      p: { a: 0, k: [-284, 92], ix: 2 },
                      a: { a: 0, k: [0, 0], ix: 1 },
                      s: { a: 0, k: [100, 100], ix: 3 },
                      r: { a: 0, k: 0, ix: 6 },
                      o: { a: 0, k: 100, ix: 7 },
                      sk: { a: 0, k: 0, ix: 4 },
                      sa: { a: 0, k: 0, ix: 5 },
                      nm: "Transform",
                      _render: true
                    }
                  ],
                  nm: "Ellipse 1",
                  np: 3,
                  cix: 2,
                  bm: 0,
                  ix: 1,
                  mn: "ADBE Vector Group",
                  hd: false,
                  _render: true
                }
              ],
              ip: 0,
              op: 360,
              st: 0,
              bm: 0,
              completed: true
            },
            {
              ddd: 0,
              ind: 2,
              ty: 4,
              nm: "Dot3",
              sr: 1,
              ks: {
                o: {
                  a: 1,
                  k: [
                    {
                      i: { x: [0.667], y: [1] },
                      o: { x: [0.333], y: [0] },
                      t: 17,
                      s: [25]
                    },
                    {
                      i: { x: [0.667], y: [1] },
                      o: { x: [0.333], y: [0] },
                      t: 31,
                      s: [100]
                    },
                    { t: 47, s: [25] }
                  ],
                  ix: 11
                },
                r: { a: 0, k: 0, ix: 10 },
                p: {
                  a: 1,
                  k: [
                    {
                      i: { x: 0.667, y: 1 },
                      o: { x: 0.333, y: 0 },
                      t: 17,
                      s: [1022, 540, 0],
                      to: null,
                      ti: null
                    },
                    {
                      i: { x: 0.667, y: 1 },
                      o: { x: 0.333, y: 0 },
                      t: 31,
                      s: [1022, 500, 0],
                      to: null,
                      ti: null
                    },
                    { t: 47, s: [1022, 540, 0] }
                  ],
                  ix: 2,
                  l: 2
                },
                a: { a: 0, k: [-284, 92, 0], ix: 1, l: 2 },
                s: {
                  a: 1,
                  k: [
                    {
                      i: { x: [0.667, 0.667, 0.667], y: [1, 1, 1] },
                      o: { x: [0.333, 0.333, 0.333], y: [0, 0, 0] },
                      t: 17,
                      s: [50, 50, 100]
                    },
                    {
                      i: { x: [0.667, 0.667, 0.667], y: [1, 1, 1] },
                      o: { x: [0.333, 0.333, 0.333], y: [0, 0, 0] },
                      t: 31,
                      s: [75, 75, 100]
                    },
                    { t: 47, s: [50, 50, 100] }
                  ],
                  ix: 6,
                  l: 2
                }
              },
              ao: 0,
              shapes: [
                {
                  ty: "gr",
                  it: [
                    {
                      d: 1,
                      ty: "el",
                      s: { a: 0, k: [120, 120], ix: 2 },
                      p: { a: 0, k: [0, 0], ix: 3 },
                      nm: "Ellipse Path 1",
                      mn: "ADBE Vector Shape - Ellipse",
                      hd: false,
                      _render: true
                    },
                    {
                      ty: "fl",
                      c: { a: 0, k: [0.4549, 0.4549, 0.4549, 1], ix: 4 },
                      o: { a: 0, k: 100, ix: 5 },
                      r: 1,
                      bm: 0,
                      nm: "Fill 1",
                      mn: "ADBE Vector Graphic - Fill",
                      hd: false,
                      _render: true
                    },
                    {
                      ty: "tr",
                      p: { a: 0, k: [-284, 92], ix: 2 },
                      a: { a: 0, k: [0, 0], ix: 1 },
                      s: { a: 0, k: [100, 100], ix: 3 },
                      r: { a: 0, k: 0, ix: 6 },
                      o: { a: 0, k: 100, ix: 7 },
                      sk: { a: 0, k: 0, ix: 4 },
                      sa: { a: 0, k: 0, ix: 5 },
                      nm: "Transform",
                      _render: true
                    }
                  ],
                  nm: "Ellipse 1",
                  np: 3,
                  cix: 2,
                  bm: 0,
                  ix: 1,
                  mn: "ADBE Vector Group",
                  hd: false,
                  _render: true
                }
              ],
              ip: 0,
              op: 360,
              st: 0,
              bm: 0,
              completed: true
            },
            {
              ddd: 0,
              ind: 3,
              ty: 4,
              nm: "Dot2",
              sr: 1,
              ks: {
                o: {
                  a: 1,
                  k: [
                    {
                      i: { x: [0.667], y: [1] },
                      o: { x: [0.333], y: [0] },
                      t: 9,
                      s: [25]
                    },
                    {
                      i: { x: [0.667], y: [1] },
                      o: { x: [0.333], y: [0] },
                      t: 23,
                      s: [100]
                    },
                    { t: 39, s: [25] }
                  ],
                  ix: 11
                },
                r: { a: 0, k: 0, ix: 10 },
                p: {
                  a: 1,
                  k: [
                    {
                      i: { x: 0.667, y: 1 },
                      o: { x: 0.333, y: 0 },
                      t: 9,
                      s: [902, 540, 0],
                      to: null,
                      ti: null
                    },
                    {
                      i: { x: 0.667, y: 1 },
                      o: { x: 0.333, y: 0 },
                      t: 23,
                      s: [902, 500, 0],
                      to: null,
                      ti: null
                    },
                    { t: 39, s: [902, 540, 0] }
                  ],
                  ix: 2,
                  l: 2
                },
                a: { a: 0, k: [-284, 92, 0], ix: 1, l: 2 },
                s: {
                  a: 1,
                  k: [
                    {
                      i: { x: [0.667, 0.667, 0.667], y: [1, 1, 1] },
                      o: { x: [0.333, 0.333, 0.333], y: [0, 0, 0] },
                      t: 9,
                      s: [50, 50, 100]
                    },
                    {
                      i: { x: [0.667, 0.667, 0.667], y: [1, 1, 1] },
                      o: { x: [0.333, 0.333, 0.333], y: [0, 0, 0] },
                      t: 23,
                      s: [75, 75, 100]
                    },
                    { t: 39, s: [50, 50, 100] }
                  ],
                  ix: 6,
                  l: 2
                }
              },
              ao: 0,
              shapes: [
                {
                  ty: "gr",
                  it: [
                    {
                      d: 1,
                      ty: "el",
                      s: { a: 0, k: [120, 120], ix: 2 },
                      p: { a: 0, k: [0, 0], ix: 3 },
                      nm: "Ellipse Path 1",
                      mn: "ADBE Vector Shape - Ellipse",
                      hd: false,
                      _render: true
                    },
                    {
                      ty: "fl",
                      c: { a: 0, k: [0.4549, 0.4549, 0.4549, 1], ix: 4 },
                      o: { a: 0, k: 100, ix: 5 },
                      r: 1,
                      bm: 0,
                      nm: "Fill 1",
                      mn: "ADBE Vector Graphic - Fill",
                      hd: false,
                      _render: true
                    },
                    {
                      ty: "tr",
                      p: { a: 0, k: [-284, 92], ix: 2 },
                      a: { a: 0, k: [0, 0], ix: 1 },
                      s: { a: 0, k: [100, 100], ix: 3 },
                      r: { a: 0, k: 0, ix: 6 },
                      o: { a: 0, k: 100, ix: 7 },
                      sk: { a: 0, k: 0, ix: 4 },
                      sa: { a: 0, k: 0, ix: 5 },
                      nm: "Transform",
                      _render: true
                    }
                  ],
                  nm: "Ellipse 1",
                  np: 3,
                  cix: 2,
                  bm: 0,
                  ix: 1,
                  mn: "ADBE Vector Group",
                  hd: false,
                  _render: true
                }
              ],
              ip: 0,
              op: 360,
              st: 0,
              bm: 0,
              completed: true
            },
            {
              ddd: 0,
              ind: 4,
              ty: 4,
              nm: "Dot1",
              sr: 1,
              ks: {
                o: {
                  a: 1,
                  k: [
                    {
                      i: { x: [0.667], y: [1] },
                      o: { x: [0.333], y: [0] },
                      t: 0,
                      s: [25]
                    },
                    {
                      i: { x: [0.667], y: [1] },
                      o: { x: [0.333], y: [0] },
                      t: 14,
                      s: [100]
                    },
                    { t: 30, s: [25] }
                  ],
                  ix: 11
                },
                r: { a: 0, k: 0, ix: 10 },
                p: {
                  a: 1,
                  k: [
                    {
                      i: { x: 0.667, y: 1 },
                      o: { x: 0.333, y: 0 },
                      t: 0,
                      s: [782, 540, 0],
                      to: null,
                      ti: null
                    },
                    {
                      i: { x: 0.667, y: 1 },
                      o: { x: 0.333, y: 0 },
                      t: 14,
                      s: [782, 500, 0],
                      to: null,
                      ti: null
                    },
                    { t: 30, s: [782, 540, 0] }
                  ],
                  ix: 2,
                  l: 2
                },
                a: { a: 0, k: [-284, 92, 0], ix: 1, l: 2 },
                s: {
                  a: 1,
                  k: [
                    {
                      i: { x: [0.667, 0.667, 0.667], y: [1, 1, 1] },
                      o: { x: [0.333, 0.333, 0.333], y: [0, 0, 0] },
                      t: 0,
                      s: [50, 50, 100]
                    },
                    {
                      i: { x: [0.667, 0.667, 0.667], y: [1, 1, 1] },
                      o: { x: [0.333, 0.333, 0.333], y: [0, 0, 0] },
                      t: 14,
                      s: [75, 75, 100]
                    },
                    { t: 30, s: [50, 50, 100] }
                  ],
                  ix: 6,
                  l: 2
                }
              },
              ao: 0,
              shapes: [
                {
                  ty: "gr",
                  it: [
                    {
                      d: 1,
                      ty: "el",
                      s: { a: 0, k: [120, 120], ix: 2 },
                      p: { a: 0, k: [0, 0], ix: 3 },
                      nm: "Ellipse Path 1",
                      mn: "ADBE Vector Shape - Ellipse",
                      hd: false,
                      _render: true
                    },
                    {
                      ty: "fl",
                      c: { a: 0, k: [0.4549, 0.4549, 0.4549, 1], ix: 4 },
                      o: { a: 0, k: 100, ix: 5 },
                      r: 1,
                      bm: 0,
                      nm: "Fill 1",
                      mn: "ADBE Vector Graphic - Fill",
                      hd: false,
                      _render: true
                    },
                    {
                      ty: "tr",
                      p: { a: 0, k: [-284, 92], ix: 2 },
                      a: { a: 0, k: [0, 0], ix: 1 },
                      s: { a: 0, k: [100, 100], ix: 3 },
                      r: { a: 0, k: 0, ix: 6 },
                      o: { a: 0, k: 100, ix: 7 },
                      sk: { a: 0, k: 0, ix: 4 },
                      sa: { a: 0, k: 0, ix: 5 },
                      nm: "Transform",
                      _render: true
                    }
                  ],
                  nm: "Ellipse 1",
                  np: 3,
                  cix: 2,
                  bm: 0,
                  ix: 1,
                  mn: "ADBE Vector Group",
                  hd: false,
                  _render: true
                }
              ],
              ip: 0,
              op: 360,
              st: 0,
              bm: 0,
              completed: true
            }
          ],
          markers: [],
          __complete: true
        }}
        className={classNames("__wab_instance", sty.lottie)}
      />
    </div>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: ["root", "lottie"],
  lottie: ["lottie"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  (typeof PlasmicDescendants)[T][number];
type NodeDefaultElementType = {
  root: "div";
  lottie: typeof LottieWrapper;
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicLoadingCompopnentGray__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicLoadingCompopnentGray__VariantsArgs;
    args?: PlasmicLoadingCompopnentGray__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicLoadingCompopnentGray__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    // Specify args directly as props
    Omit<PlasmicLoadingCompopnentGray__ArgsType, ReservedPropsType> &
    // Specify overrides for each element directly as props
    Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    // Specify props for the root element
    Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: PlasmicDescendants[nodeName],
          internalArgPropNames: PlasmicLoadingCompopnentGray__ArgProps,
          internalVariantPropNames: PlasmicLoadingCompopnentGray__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicLoadingCompopnentGray__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicLoadingCompopnentGray";
  } else {
    func.displayName = `PlasmicLoadingCompopnentGray.${nodeName}`;
  }
  return func;
}

export const PlasmicLoadingCompopnentGray = Object.assign(
  // Top-level PlasmicLoadingCompopnentGray renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    lottie: makeNodeComponent("lottie"),

    // Metadata about props expected for PlasmicLoadingCompopnentGray
    internalVariantProps: PlasmicLoadingCompopnentGray__VariantProps,
    internalArgProps: PlasmicLoadingCompopnentGray__ArgProps
  }
);

export default PlasmicLoadingCompopnentGray;
/* prettier-ignore-end */
